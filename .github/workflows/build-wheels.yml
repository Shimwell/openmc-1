name: Build Wheels

on: [push, workflow_dispatch]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - uses: actions/setup-python@v5

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.19.2

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp311-${{ matrix.cibw-arch }}"
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_ARCHS_LINUX: x86_64
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
          CIBW_ENVIRONMENT_LINUX: LD_LIBRARY_PATH="/usr/local/lib64:${LD_LIBRARY_PATH}" PIP_ONLY_BINARY="numpy"
          CIBW_BEFORE_ALL_LINUX: |
            set -eu
            dnf install -y epel-release
            dnf config-manager --enable epel
            dnf update --nogpgcheck
            dnf install -y sudo cmake eigen3-devel gcc gcc-c++ wget hdf5-devel
            bash build-deps.sh
            echo "LD_LIBRARY_PATH: ${LD_LIBRARY_PATH}"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
